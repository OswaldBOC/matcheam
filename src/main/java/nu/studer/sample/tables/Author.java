/**
 * This class is generated by jOOQ
 */
package nu.studer.sample.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Author extends org.jooq.impl.TableImpl<nu.studer.sample.tables.records.AuthorRecord> {

	private static final long serialVersionUID = 1437333333;

	/**
	 * The singleton instance of <code>library.author</code>
	 */
	public static final nu.studer.sample.tables.Author AUTHOR = new nu.studer.sample.tables.Author();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<nu.studer.sample.tables.records.AuthorRecord> getRecordType() {
		return nu.studer.sample.tables.records.AuthorRecord.class;
	}

	/**
	 * The column <code>library.author.id</code>.
	 */
	public final org.jooq.TableField<nu.studer.sample.tables.records.AuthorRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>library.author.first_name</code>.
	 */
	public final org.jooq.TableField<nu.studer.sample.tables.records.AuthorRecord, java.lang.String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>library.author.last_name</code>.
	 */
	public final org.jooq.TableField<nu.studer.sample.tables.records.AuthorRecord, java.lang.String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>library.author</code> table reference
	 */
	public Author() {
		this("author", null);
	}

	/**
	 * Create an aliased <code>library.author</code> table reference
	 */
	public Author(java.lang.String alias) {
		this(alias, nu.studer.sample.tables.Author.AUTHOR);
	}

	private Author(java.lang.String alias, org.jooq.Table<nu.studer.sample.tables.records.AuthorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Author(java.lang.String alias, org.jooq.Table<nu.studer.sample.tables.records.AuthorRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, nu.studer.sample.Library.LIBRARY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<nu.studer.sample.tables.records.AuthorRecord> getPrimaryKey() {
		return nu.studer.sample.Keys.KEY_AUTHOR_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<nu.studer.sample.tables.records.AuthorRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<nu.studer.sample.tables.records.AuthorRecord>>asList(nu.studer.sample.Keys.KEY_AUTHOR_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public nu.studer.sample.tables.Author as(java.lang.String alias) {
		return new nu.studer.sample.tables.Author(alias, this);
	}

	/**
	 * Rename this table
	 */
	public nu.studer.sample.tables.Author rename(java.lang.String name) {
		return new nu.studer.sample.tables.Author(name, null);
	}
}
