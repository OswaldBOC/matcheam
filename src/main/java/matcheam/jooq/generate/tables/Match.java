/*
 * This file is generated by jOOQ.
*/
package matcheam.jooq.generate.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import matcheam.jooq.generate.Keys;
import matcheam.jooq.generate.Matcheam;
import matcheam.jooq.generate.tables.records.MatchRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Match extends TableImpl<MatchRecord> {

    private static final long serialVersionUID = -1982080800;

    /**
     * The reference instance of <code>matcheam.match</code>
     */
    public static final Match MATCH = new Match();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatchRecord> getRecordType() {
        return MatchRecord.class;
    }

    /**
     * The column <code>matcheam.match.identifier</code>.
     */
    public final TableField<MatchRecord, String> IDENTIFIER = createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR MATCHEAM.SYSTEM_SEQUENCE_9080C586_8F83_4880_830E_66F629E14A56)", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>matcheam.match.place</code>.
     */
    public final TableField<MatchRecord, String> PLACE = createField("place", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>matcheam.match.date</code>.
     */
    public final TableField<MatchRecord, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>matcheam.match.start</code>.
     */
    public final TableField<MatchRecord, String> START = createField("start", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>matcheam.match.time</code>.
     */
    public final TableField<MatchRecord, String> TIME = createField("time", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>matcheam.match.level</code>.
     */
    public final TableField<MatchRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>matcheam.match.maxplayers</code>.
     */
    public final TableField<MatchRecord, BigDecimal> MAXPLAYERS = createField("maxplayers", org.jooq.impl.SQLDataType.DECIMAL, this, "");

    /**
     * Create a <code>matcheam.match</code> table reference
     */
    public Match() {
        this("match", null);
    }

    /**
     * Create an aliased <code>matcheam.match</code> table reference
     */
    public Match(String alias) {
        this(alias, MATCH);
    }

    private Match(String alias, Table<MatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private Match(String alias, Table<MatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Matcheam.MATCHEAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MatchRecord, String> getIdentity() {
        return Keys.IDENTITY_MATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MatchRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MatchRecord>> getKeys() {
        return Arrays.<UniqueKey<MatchRecord>>asList(Keys.CONSTRAINT_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Match as(String alias) {
        return new Match(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Match rename(String name) {
        return new Match(name, null);
    }
}
