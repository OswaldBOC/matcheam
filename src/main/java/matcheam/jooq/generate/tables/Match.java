/*
 * This file is generated by jOOQ.
*/
package matcheam.jooq.generate.tables;


import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp;

import javax.annotation.Generated;

import matcheam.jooq.generate.Matcheam;
import matcheam.jooq.generate.tables.records.MatchRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Match extends TableImpl<MatchRecord> {

    private static final long serialVersionUID = 1407851259;

    /**
     * The reference instance of <code>matcheam.match</code>
     */
    public static final Match MATCH = new Match();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatchRecord> getRecordType() {
        return MatchRecord.class;
    }

    /**
     * The column <code>matcheam.match.identifier</code>.
     */
    public final TableField<MatchRecord, String> IDENTIFIER = createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>matcheam.match.place</code>.
     */
    public final TableField<MatchRecord, String> PLACE = createField("place", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>matcheam.match.date</code>.
     */
    public final TableField<MatchRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>matcheam.match.gametime</code>.
     */
    public final TableField<MatchRecord, Time> GAMETIME = createField("gametime", org.jooq.impl.SQLDataType.TIME.nullable(false), this, "");

    /**
     * The column <code>matcheam.match.level</code>.
     */
    public final TableField<MatchRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>matcheam.match.maxplayers</code>.
     */
    public final TableField<MatchRecord, BigDecimal> MAXPLAYERS = createField("maxplayers", org.jooq.impl.SQLDataType.DECIMAL, this, "");

    /**
     * Create a <code>matcheam.match</code> table reference
     */
    public Match() {
        this("match", null);
    }

    /**
     * Create an aliased <code>matcheam.match</code> table reference
     */
    public Match(String alias) {
        this(alias, MATCH);
    }

    private Match(String alias, Table<MatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private Match(String alias, Table<MatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Matcheam.MATCHEAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Match as(String alias) {
        return new Match(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Match rename(String name) {
        return new Match(name, null);
    }
}
